{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8000';\nexport default class Service {\n  getCatalog() {\n    const url = `${API_URL}/allcatalog`;\n    return axios.post(url).then(response => response.data);\n  }\n\n  getArticle(raw) {\n    const url = `${API_URL}/article`;\n    return axios.post(url, raw).then(response => response.data);\n  }\n\n  getRedactions() {\n    const url = `${API_URL}/redactions`;\n    return axios.get(url).then(response => response.data);\n  }\n\n  RedactionAppdate(raw) {\n    const url = `${API_URL}/redactionAppdate`;\n    return axios.post(url, raw).then(response => response.data);\n  }\n\n  createArticle(raw) {\n    const url = `${API_URL}/createarticle`;\n    return axios.post(url, raw).then(response => response.data[0].article);\n  }\n\n  goodArticleUpdate(raw) {\n    const url = `${API_URL}/goodArticleUpdate`;\n    return axios.post(url, raw).then(response => response);\n  }\n\n  badArticleUpdate(raw) {\n    const url = `${API_URL}/badArticleUpdate`;\n    return axios.post(url, raw).then(response => response);\n  }\n\n  redactorArticle(raw) {\n    const url = `${API_URL}/redactorArticleAppend`;\n    return axios.post(url, raw).then(response => response);\n  }\n\n  newType(raw) {\n    const url = `${API_URL}/newType`;\n    return axios.post(url, raw).then(response => response);\n  }\n\n  getComments(raw) {\n    const url = `${API_URL}/comments`;\n    return axios.post(url, raw).then(response => response.data);\n  }\n\n  appendComment(raw) {\n    const url = `${API_URL}/appendcomment`;\n    console.log(\"hello\");\n    return axios.post(url, raw).then(response => response);\n  }\n\n  deleteComment(raw) {\n    const url = `${API_URL}/deletecomment`;\n    return axios.post(url, raw).then(response => response);\n  }\n\n}","map":{"version":3,"sources":["/home/oem/React/ServiceOfTutorials/frontend/src/Service.js"],"names":["axios","API_URL","Service","getCatalog","url","post","then","response","data","getArticle","raw","getRedactions","get","RedactionAppdate","createArticle","article","goodArticleUpdate","badArticleUpdate","redactorArticle","newType","getComments","appendComment","console","log","deleteComment"],"mappings":"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","sourcesContent":["import axios from 'axios';\nconst API_URL = 'http://localhost:8000';\n\nexport default class Service{\n\tgetCatalog() {\n\t\tconst url = `${API_URL}/allcatalog`;\n\t\treturn axios.post(url).then(response => response.data);\n\t}\n\tgetArticle(raw) {\n\t\tconst url = `${API_URL}/article`;\n\t\treturn axios.post(url, raw).then(response => response.data);\n\t}\t\n\t\n\tgetRedactions() {\n\t\tconst url = `${API_URL}/redactions`;\n\t\treturn axios.get(url).then(response => response.data);\n\t}\n\tRedactionAppdate(raw) {\n\t\tconst url = `${API_URL}/redactionAppdate`;\n\t\treturn axios.post(url, raw).then(response => response.data);\n\t}\t\n\n\tcreateArticle(raw) {\n\t\tconst url = `${API_URL}/createarticle`;\n\t\treturn axios.post(url, raw).then(response => response.data[0].article);\n\t}\n\tgoodArticleUpdate (raw) {\n\t\tconst url = `${API_URL}/goodArticleUpdate`;\n\t\treturn axios.post(url, raw).then(response => response);\n\t}\n\tbadArticleUpdate (raw) {\n\t\tconst url = `${API_URL}/badArticleUpdate`;\n\t\treturn axios.post(url, raw).then(response => response);\n\t}\n\tredactorArticle (raw) {\n\t\tconst url = `${API_URL}/redactorArticleAppend`;\n\t\treturn axios.post(url, raw).then(response => response);\n\t}\n\n\n\tnewType (raw) {\n\t\tconst url = `${API_URL}/newType`;\n\t\treturn axios.post(url, raw).then(response => response);\n\t}\t\n\n\n\n\tgetComments(raw) {\n\t\tconst url = `${API_URL}/comments`;\n\t\treturn axios.post(url, raw).then(response => response.data);\n\t}\t\n\tappendComment(raw){\n\t\tconst url = `${API_URL}/appendcomment`;\n\t\tconsole.log(\"hello\")\n\t\treturn axios.post(url, raw).then(response => response);\n\t}\n\tdeleteComment(raw){\n\t\tconst url = `${API_URL}/deletecomment`;\n\t\treturn axios.post(url, raw).then(response => response);\n\t}\n}"]},"metadata":{},"sourceType":"module"}