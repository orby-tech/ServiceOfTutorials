{"ast":null,"code":"var _jsxFileName = \"/home/oem/React/ServiceOfTutorials/frontend/src/Article.js\";\nimport React, { Component } from 'react';\nimport Service from './Service';\nimport Comments from './Comments';\nimport { Link } from 'react-router-dom';\nimport { multilanguage, changeLanguage, loadLanguages } from \"redux-multilanguage\";\nimport { connect } from 'react-redux';\nconst service = new Service();\n\nclass PREArticle extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    let article = [];\n    const {\n      currentLanguageCode\n    } = this.props;\n    let fref = 'Article' + params.pk + currentLanguageCode;\n\n    if (localStorage.getItem(fref)) {\n      article = JSON.parse(localStorage.getItem(fref));\n    }\n\n    this.state = {\n      article: article,\n      id: params.pk\n    };\n  }\n\n  componentDidMount() {\n    var self = this;\n    let fref = 'Article' + this.state.id;\n    const {\n      strings,\n      currentLanguageCode\n    } = this.props;\n    service.getArticle({\n      id: this.state.id,\n      leng: currentLanguageCode\n    }).then(function (result) {\n      if (result && result[0]) {\n        localStorage.setItem(fref, JSON.stringify(result[0].article));\n        self.setState({\n          article: result[0].article\n        });\n      }\n    });\n  }\n\n  componentWillUpdate(prevProps) {\n    var self = this;\n\n    if (prevProps.currentLanguageCode !== this.props.currentLanguageCode) {\n      let fref = 'Article' + this.state.id + prevProps.currentLanguageCode;\n\n      if (localStorage.getItem(fref)) {\n        let article = JSON.parse(localStorage.getItem(fref));\n        self.setState({\n          article: article\n        });\n      }\n\n      service.getArticle({\n        id: self.state.id,\n        leng: prevProps.currentLanguageCode\n      }).then(function (result) {\n        if (result && result[0]) {\n          localStorage.setItem(fref, JSON.stringify(result[0].article));\n          self.setState({\n            article: result[0].article\n          });\n        }\n      });\n    }\n  }\n\n  styleOfArticle(key) {\n    if (key[1] === \"code\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: key,\n        className: \"article__code\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 16\n        }\n      }, key[0]);\n    } else if (key[1] === \"text\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: key,\n        className: \"article__text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }\n      }, key[0]);\n    } else if (key[1] === \"link\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: key,\n        className: \"article__link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: key[2],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }, \" \", key[0]));\n    } else if (key[1] === \"header\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: key,\n        className: \"article__header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }\n      }, key[0]);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n\n    if (params.pk !== this.state.opend) {\n      this.setState({\n        opend: params.pk\n      });\n    }\n  }\n\n  render() {\n    const {\n      strings,\n      currentLanguageCode\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"article__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, this.state.article.map(moment => this.styleOfArticle(moment)), /*#__PURE__*/React.createElement(Link, {\n      className: \"article__readact btn btn-success\",\n      to: \"/ArticleRedactor/\" + this.state.opend,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, strings[\"articleEdit\"]), /*#__PURE__*/React.createElement(Comments, {\n      id: this.state.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nconst Article = connect()(multilanguage(PREArticle));\nexport default Article;","map":{"version":3,"sources":["/home/oem/React/ServiceOfTutorials/frontend/src/Article.js"],"names":["React","Component","Service","Comments","Link","multilanguage","changeLanguage","loadLanguages","connect","service","PREArticle","constructor","props","match","params","article","currentLanguageCode","fref","pk","localStorage","getItem","JSON","parse","state","id","componentDidMount","self","strings","getArticle","leng","then","result","setItem","stringify","setState","componentWillUpdate","prevProps","styleOfArticle","key","componentDidUpdate","opend","render","map","moment","Article"],"mappings":"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","sourcesContent":["import React, { Component }  from 'react';\n\nimport  Service  from  './Service';\nimport  Comments from './Comments';\nimport { Link } from 'react-router-dom';\nimport { multilanguage, changeLanguage, loadLanguages} from \"redux-multilanguage\";\nimport  { connect } from 'react-redux'\n\n\nconst  service  =  new  Service();\n\nclass PREArticle extends Component{\n\n  constructor(props) {\n    super(props);\n\n    const { match: { params } } = this.props;\n\n    let article = []\n    const { currentLanguageCode } = this.props;\n    let fref = 'Article'+ params.pk + currentLanguageCode\n\n    if(localStorage.getItem(fref)){\n      article = JSON.parse(localStorage.getItem(fref))\n    }\n    this.state = {\n      article:  article,\n      id: params.pk\n    };\n  }\n\n\n  componentDidMount(){\n    var  self  =  this;\n    let fref = 'Article'+this.state.id\n    const { strings, currentLanguageCode } = this.props;\n    service.getArticle({id: this.state.id, leng: currentLanguageCode }).then(function (result) {    \n        \n      if (result && result[0]) {\n        localStorage.setItem(fref, JSON.stringify(result[0].article))\n        self.setState({ article: result[0].article })\n      }  \n    });\n  }\n  componentWillUpdate(prevProps) {\n    var  self  =  this;\n    if(prevProps.currentLanguageCode !== this.props.currentLanguageCode){\n      let fref = 'Article'+ this.state.id + prevProps.currentLanguageCode\n      if(localStorage.getItem(fref)){\n        let article = JSON.parse(localStorage.getItem(fref))\n        self.setState({ article: article })\n      }\n      service.getArticle({id: self.state.id, leng:  prevProps.currentLanguageCode }).then(function (result) {  \n        if ( result && result[0] ) {\n          localStorage.setItem(fref, JSON.stringify(result[0].article))\n          self.setState({ article: result[0].article })\n        }  \n      });\n    }\n  }\n\n  styleOfArticle(key) {\n    if (key[1] === \"code\") {\n      return  (<div key={key} className=\"article__code\">\n                {key[0]}\n              </div>)\n    } else if(key[1] === \"text\"){\n      return (<div key={key} className=\"article__text\">\n                {key[0]}\n              </div>)\n    } else if(key[1] === \"link\"){\n      return (<div key={key} className=\"article__link\">\n                <a href={key[2]}> {key[0]}</a>\n              </div>)\n    } else if(key[1] === \"header\"){\n      return (<div key={key} className=\"article__header\">\n                {key[0]}\n              </div>)\n    }\n  }\n\n\n  componentDidUpdate(prevProps) {\n    const { match: { params } } = this.props;\n    if (params.pk !== this.state.opend) {\n      this.setState({opend: params.pk});\n    }\n  }\n  \n\n  render() {\n    const { strings, currentLanguageCode } = this.props;\n    return(\n        <div className=\"article__container\">\n          { \n            this.state.article.map( moment  =>\n              this.styleOfArticle(moment)\n            )\n          }\n\n          <Link className=\"article__readact btn btn-success\" to={\"/ArticleRedactor/\"+this.state.opend}>\n            {strings[\"articleEdit\"]}\n          </Link>\n          <Comments id={this.state.id}/>\n      </div>\n    );\n  }\n}\nconst Article = connect()(multilanguage(PREArticle));\n\nexport default Article;\n"]},"metadata":{},"sourceType":"module"}